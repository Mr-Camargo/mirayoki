name: Pre-deploy

on:
  push:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-latest
        
    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v3
    - name: Setup Node.js v16
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - name: Reinstall packages
      run: npm ci
    - name: Initialize Mirayoki
      run: npm run test
      env:
        SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
        MONGO_SRV: ${{ secrets.MONGO_SRV }}
        VERSION: Pre-Deploy CI Build
        BOT_ID: ${{ secrets.BOT_ID }}
        ACTIVITY_TYPE: PLAYING
        ACTIVITY: with CI builds
        TESTING_SERVER_ID: ${{ secrets.TESTING_SERVER_ID }}

  Eslint:
    runs-on: ubuntu-latest
    outputs:
      commitSHA: ${{ steps.commit-information.outputs.commitSHA }}
      changed-files: ${{ steps.changed-files.outputs.changedfiles }} 
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: Run eslint checks
        run: npm run lint
      - name: Get latest commit SHA for ${{ github.repository }}
        id: commit-information
        run: |
         GIT_COMMIT=${{ github.sha }}
         MODIFIED_COMMIT=${GIT_COMMIT::7}
         echo "commitSHA=${MODIFIED_COMMIT}" >> $GITHUB_OUTPUT
      - name: Check if the user experience has been modified
        id: changed-files-specific
        uses: tj-actions/changed-files@v34.4.4
        with:
          files: |
            src/**
          since_last_remote_commit: "true"
      - name: Indicate that the user experience has changed
        id: changed-files
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: echo "changedfiles=true" >> $GITHUB_OUTPUT
      
  Analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'javascript'

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  Deploy:
    needs: [Build, Analyze, Eslint]
    if: needs.Eslint.outputs.changed-files == 'true' && github.repository == 'Slashy-Studio/mirayoki'
    runs-on: ubuntu-latest
    env:
     HEROKU_APP_NAME: mirayoki
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add credentials to Heroku
        run: |
         cat >~/.netrc <<EOF
         machine api.heroku.com
          login ${{ secrets.HEROKU_EMAIL }}
          password ${{ secrets.HEROKU_API_KEY }}
         machine git.heroku.com
          login ${{ secrets.HEROKU_EMAIL }}
          password ${{ secrets.HEROKU_API_KEY }}
         EOF    
      - name: Log in into Heroku
        run: heroku login
      - name: Set version to the latest commit of ${{ github.repository }}
        run: heroku config:set COMMIT=${{ env.commitSHA }} -a ${{ env.HEROKU_APP_NAME }}
        env:
         commitSHA: ${{ needs.Eslint.outputs.commitSHA }}
      - name: Add ${{ github.repository }} as a remote for Heroku
        run: heroku git:remote -a ${{ env.HEROKU_APP_NAME }}  
      - name: Push ${{ github.repository }} to Heroku
        run: git push heroku HEAD:main -f

  Tweet:
      needs: [Build, Analyze, Eslint, Deploy]
      if: needs.Eslint.outputs.changed-files == 'true' && github.repository == 'Slashy-Studio/mirayoki'
      runs-on: ubuntu-latest
      env:
        commitSHA: ${{ needs.Eslint.outputs.commitSHA }}
      steps:
      - name: Send tweet
        uses: lazy-actions/tweet-action@main
        with:
          data: |
                {
                  "commit": "${{ env.commitSHA }}",
                  "url": "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
                }
          template: |
            Deploying soon! ðŸš€ 
            
            The latest commit to Mirayoki (<%- commit %>) is being rolled out to all users right now. ðŸ› 
            
            ðŸ‘€ Check out what's new: <%- url %>
          oauth_consumer_key: ${{ secrets.TWITTER_CONSUMER_KEY }}
          oauth_consumer_secret: ${{ secrets.TWITTER_CONSUMER_KEY_SECRET }}
          oauth_token: ${{ secrets.TWITTER_USER_TOKEN }}
          oauth_token_secret: ${{ secrets.TWITTER_USER_TOKEN_SECRET }}